" =========
" Functions
" =========

" Some files should wrap
function! s:setupWrapping()
  set wrap
  set linebreak
  set textwidth=72
  set nolist

  " jk$0 fix for wrapped lines
  noremap  <buffer> <silent> k gk
  noremap  <buffer> <silent> j gj
  noremap  <buffer> <silent> 0 g0
  noremap  <buffer> <silent> $ g$
endfunction

" =============
" Main Settings
" =============

" Load Pathogen
" -------------

call pathogen#infect('colors')
call pathogen#infect('langs')
call pathogen#infect('tools')

" Leader
" ------

let mapleader = ","

" Basics
" ------

color getafe
set background=dark
set nocompatible   " Use vim, no vi defaults
set ruler          " Show line and column number
set relativenumber " Show line numbers relative to current line
syntax enable      " Turn on syntax highlighting allowing local overrides
set encoding=utf-8 " Set default encoding
set hidden         " Unsaved buffers can be in the background
"set laststatus=2   " always show status bar

" work with tmux copy/paste
" set clipboard=unnamed

" Whitespace
" ----------

set nowrap          " Don't wrap lines
set tabstop=2       " 1 tab = 2 spaces
set shiftwidth=2    " Autoindent (with <<) is 2 spaces
set expandtab       " Spaces > Tabs
set list            " Show invisible characters
set backspace=indent,eol,start  " Backspace through ALL THE THINGS

" List characters

set listchars=""          " Reset
set listchars=tab:\ \     " Tab should display as " ", trailing whitespace as "."
set listchars+=trail:.    " Show trailing spaces as dots
set listchars+=extends:>  " Character to show in the last column when too much text (right)
set listchars+=precedes:<  " Character to show in the last column when too much text (left)

" Tab Completion - make tab completion for files/buffers act like bash
set wildmode=longest,list
set wildmenu

" Tab Completion - ignore certain files
set wildignore+=*/.git/*,*/.sass-cache/*

" CtrlP Custom Ignores
let g:ctrlp_custom_ignore = 'node_modules$\|DS_Store\|\.git$'

" Window min sizes. By Gary Bernhardt.
"set winwidth=80
" We have to have a winheight bigger than we want to set winminheight. But if
" we set winheight to be huge before winminheight, the winminheight set will
" fail.
"set winheight=5
"set winminheight=5
"set winheight=999

" Searching
" ---------

set hlsearch   " Enable highlight
set incsearch  " Enable incremental searching
set ignorecase " Ignore case when searching
set smartcase  " Well, don't always ignore

" Backup Dirs
" -----------
set backupdir=~/.vim/_backup// " backup files
set directory=~/.vim/_temp//   " swap files

" ==================
" File Type Settings
" ==================

filetype plugin indent on " Turn on filetype plugins (:help filetype-plugin)

" Wrap Markdown Files

au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} setf markdown | call s:setupWrapping()

" ============
" Key Mappings
" ============

" Use sane regexes
nnoremap / /\v
vnoremap / /\v

" Next buffer
nmap <silent> ,. :bnext<CR>

" Previous buffer
nmap <silent> ,m :bprev<CR>

" /asdf != winning
nnoremap <CR> :nohlsearch<CR>

" quick file listing/search/etc
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>p :pwd<CR>

" window split shortcuts
nnoremap <leader>v <C-w>v
nnoremap <leader>s <C-w>s
"nnoremap <C-h> <C-w>h
"nnoremap <C-j> <C-w>j
"nnoremap <C-k> <C-w>k
"nnoremap <C-l> <C-w>l

" ack.
nnoremap <leader>f :Ack<space>

" no! use hjkl
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>

" NERDTree
nmap <leader>n :NERDTreeToggle<CR>

" vimux
nmap <leader>R :PromptVimTmuxCommand<CR>
nmap <leader>r :RunLastVimTmuxCommand<CR>

" Tagbar
nnoremap <leader>l :TagbarToggle<CR>

" Rename Variables
" For local replace
nnoremap gr [{V%:s/<C-R>///gc<left><left><left>
